// Оператор нулевого слияния представляет собой два вопросительных знака ??:

// Синтаксис и иная форма записи:
// result = a ?? b == result = (a !== null && a !== undefined) ? a : b;


// Как правило, оператор ?? нужен для того, чтобы задать значение по умолчанию для потенциально неопределённой переменной.


// Примеры:
let user;
console.log(user ?? "Аноним");

let user = "Иван";
console.log(user ?? "Аноним");


// Кроме этого, можно записать последовательность из операторов ??, чтобы получить первое значение из списка, которое не является null/undefined.

/*
let firstName = null;
let lastName = null;
let nickName = "Суперкодер";
console.log(firstName ?? lastName ?? nickName ?? "Аноним"); 
*/


// Сравнение с ||

let firstName = null;
let lastName = null;
let nickName = "Суперкодер";
console.log(firstName || lastName || nickName || "Аноним");


/* Различие между ними заключается в том, что:

|| возвращает первое истинное значение.
?? возвращает первое определённое значение.
*/

// Пример:

let height = 0;
console.log(height || 100); // 100
console.log(height ?? 100); // 0

// height || 100 проверяет height на ложное значение, оно равно 0, да, ложное.
// поэтому результатом || является второй аргумент, т.е. 100.
// height ?? 100 проверяет, что переменная height содержит null/undefined, а поскольку это не так, то результатом является сама переменная height, т.е. 0.


/*
Приоритет
Приоритет оператора ?? такой же, как и у ||.

Это означает, что, как и ||, оператор нулевого слияния ?? вычисляется до = и ?, но после большинства других операций, таких как +, *.
*/

//Пример:

let height = null;
let width = null;
let area = (height ?? 100) * (width ?? 50);
console.log(area); // 5000


//Использование ?? вместе с && или ||

let x = 1 && 2 ?? 3; // Синтаксическая ошибка

let x = (1 && 2) ?? 3; // Работает без ошибок
console.log(x); // 2